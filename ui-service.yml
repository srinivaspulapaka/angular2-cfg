# EMBEDDED SERVER CONFIGURATION
server:
    port: ${port:8080}
    context-path: /
    error.whitelabel.enabled: false
    compression:
      enabled: true
      min-response-size: 1024
      mime-types: text/html, text/xml, text/plain, text/css, application/javascript, application/json

spring:
    aop:
        proxyTargetClass: true
    activemq:
      broker-url: tcp://DS-FKXNWQ1:61616
      user-queue: com.ctl.user.queue
      cart-queue: com.ctl.cart.queue
      order-queue: com.ctl.order.queue
      notification-queue: com.ctl.notification.queue
      account-queue: com.ctl.account.queue
      sfaint-queue: com.ctl.sfaint.queue
      default-queue: com.ctl.default.queue
    cookieName: testCookie

jwt:
    tokenExpirationTime: 2592000 # Number of minutes
    refreshTokenExpTime: 2592000 # Minutes
    tokenIssuer: Ctl
    tokenSigningKey: xm8EV6Hy5RMFK4EEACIDAwQus
    publicKey: apiclient@ctl.com
    header: Authorization
    route:
      authentication:
        path: auth



security:
  basic:
    enabled: false

redis:
    cacheHost: 127.0.0.1 # Host name
    cachePort: 6379 # port number
    cacheExpiration: 300 #Seconds

management:
  security:
    enabled: false

# EUREKA
eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
# ZULL
zuul:
  routes:
     product-service:
          sensitiveHeaders:
          path: /api/product-service/**
          stripPrefix: true
     address-service:
          sensitiveHeaders:
          path: /api/address-service/**
          stripPrefix: true
     notification-service:
          sensitiveHeaders:
          path: /api/notification-service/**
          stripPrefix: true
     user-service:
          sensitiveHeaders:
          path: /auth/**
          stripPrefix: false
     cart-service:
          sensitiveHeaders:
          path: /api/cart-service/**
          stripPrefix: true
     order-service:
           sensitiveHeaders:
           path: /api/order-service/**
           stripPrefix: true
     sfaint-service:
          sensitiveHeaders:
          path: /api/sfaint-service/**
          stripPrefix: true
     account-service:
          sensitiveHeaders:
          path: /api/account-service/**
          stripPrefix: true
  add-proxy-headers: true

---

spring:
  profiles: docker
  activemq:
    broker-url: tcp://DS-FKXNWQ1:61616
    user-queue: com.ctl.user.queue
    cart-queue: com.ctl.cart.queue
    order-queue: com.ctl.order.queue
    notification-queue: com.ctl.notification.queue
    account-queue: com.ctl.account.queue
    sfaint-queue: com.ctl.sfaint.queue
    default-queue: com.ctl.default.queue
  cookieName: testCookie

cookieName: testCookie

# EUREKA
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8081/eureka/

# ZULL
zuul:
  routes:
     user-service:
          url: http://${eureka.instance.hostname}:8083
     product-service:
          url: http://${eureka.instance.hostname}:8082
     address-service:
          url: http://${eureka.instance.hostname}:8085
     notification-service:
          url: http://${eureka.instance.hostname}:8086
     cart-service:
          url: http://${eureka.instance.hostname}:8087
     order-service:
          url: http://${eureka.instance.hostname}:8088
     sfaint-service:
          url: http://${eureka.instance.hostname}:8089
     account-service:
          url: http://${eureka.instance.hostname}:8090
---

spring:
  profiles: standalone
  activemq:
    broker-url: tcp://DS-FKXNWQ1:61616
    user-queue: com.ctl.user.queue
    cart-queue: com.ctl.cart.queue
    order-queue: com.ctl.order.queue
    notification-queue: com.ctl.notification.queue
    account-queue: com.ctl.account.queue
    sfaint-queue: com.ctl.sfaint.queue
    default-queue: com.ctl.default.queue
  cookieName: testCookie

# EUREKA
eureka:
  instance:
    hostname: localhost
    port: 8081
  client:
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${eureka.instance.port}/eureka/

# ZULL
zuul:
  routes:
     user-service:
          url: http://${eureka.instance.hostname}:8083
     product-service:
          url: http://${eureka.instance.hostname}:8082
     address-service:
          url: http://${eureka.instance.hostname}:8085
     notification-service:
          url: http://${eureka.instance.hostname}:8086
     cart-service:
          url: http://${eureka.instance.hostname}:8087
     order-service:
          url: http://${eureka.instance.hostname}:8088
     sfaint-service:
          url: http://${eureka.instance.hostname}:8089
     account-service:
          url: http://${eureka.instance.hostname}:8090

---

spring:
  profiles: cloud
  data:
    mongodb.host: ${vcap.services.mongodb.credentials.host}
    mongodb.port: ${vcap.services.mongodb.credentials.port}
    mongodb.uri: ${vcap.services.mongodb.credentials.uri}
  activemq:
    broker-url: ${vcap.services.activemq.credentials.uri}
    user-queue: ${vcap.services.activemq.credentials.user.queue}
    cart-queue: ${vcap.services.activemq.credentials.cart.queue}
    order-queue: ${vcap.services.activemq.credentials.order.queue}
    notification-queue: ${vcap.services.activemq.credentials.notification.queue}
    account-queue: ${vcap.services.activemq.credentials.account.queue}
    sfaint-queue: ${vcap.services.activemq.credentials.sfaint.queue}
    default-queue: ${vcap.services.activemq.credentials.default.queue}    
eureka:
  instance:
    nonSecurePort: 80
    hostname: ${vcap.services.eureka.credentials.host}
  client:
    service-url:
      defaultZone: ${vcap.services.eureka.credentials.url}
redis:
    cacheHost: ${vcap.services.redis.credentials.host}
    cachePort: ${vcap.services.redis.credentials.port}
    cacheExpiration: 300 #Seconds
jwt:
    tokenExpirationTime: 2592000 # Number of minutes
    refreshTokenExpTime: 2592000 # Minutes
    tokenIssuer: Ctl
    tokenSigningKey: xm8EV6Hy5RMFK4EEACIDAwQus
    publicKey: apiclient@ctl.com

# ZULL
zuul:
  routes:
     product-service:
          url: ${vcap.services.config.credentials.zuul.product.url}
     address-service:
          url: ${vcap.services.config.credentials.zuul.address.url}
     notification-service:
          url: ${vcap.services.config.credentials.zuul.notification.url}
     user-service:
          url: ${vcap.services.config.credentials.zuul.user.url}
     cart-service:
          url: ${vcap.services.config.credentials.zuul.cart.url}
     order-service:
          url: ${vcap.services.config.credentials.zuul.order.url}
     sfaint-service:
          url: ${vcap.services.config.credentials.zuul.sfaint.url}
     account-service:
          url: ${vcap.services.config.credentials.zuul.account.url}

order-service:
  ribbon:
    DeploymentContextBasedVipAddresses: order-service
    NIWSServerListClassName: com.netflix.niws.loadbalancer.DiscoveryEnabledNIWSServerList
    eureka:
      enabled: true